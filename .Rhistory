data=(123,116,122,110,175,126,125,111,118,117)
fivenum(data)
?fivenum
data=c(123, 116, 122, 110, 175, 126, 125, 111, 118, 117)
fivenum(data)
quantile(data)
?quantile
quantile(data,type=7)
quantile(data,type=6)
quantile(data,type=6,probs=c(0.25,0.50,0.75,0.90))
boxplot(data)
boxplot(data,horizontal=T)
?boxplot
a=boxplot(data,horizontal=T)
a$stats
a
boxplot(data,horizontal=T,range=1.5)
?range
?boxplot
data2=c(150,120,115,180,160,142,136,148,123,102,139)
boxplot(data, data2, range=1.5, names=c(\male",\female"), main=\box plots of
two data sets", col=c(\red",\blue"))
boxplot(data,data2,range=1.5,main=\box plots of two data sets")
boxplot(data,data2,range=1.5,main="box plots of two data sets")
two data sets", col=c("red","blue"))
boxplot(data,data2,range=1.5,main="box plots of two data sets")
data1=c(0,-0.3,-0.1,-0.5,-0.4,2.8,2.6,-1.3,0.5,2.6)
data2=c(0.4967,0.2028,1.0744,-1.9826,-0.2272,-0.9323,0.0727,0.7041,-1.2972,1.9424)
qqnorm(data1,data2)
qqnorm(data1)
qqline(data1)
qqline(data2)
qqline(data2)
qqline(data2)
qqline(data2)
qqnorm(data2)
qnorm(0.025,lower.tail=F)
qnorm(0.025,lower.tail=T)
qnorm(0.975,lower.tail=T)
qt(0.025,df=24,lower.tail=F)
qchisq(0.025,df=20,lower.tail=F)
qf(0.025,5,7,lower.tail=F)
rnorm(1000,mean=80,sd=5)
save.image("C:\\Users\\Neeraja\\Documents\\R\\classNov9.RData")
q()
getwd()
data=read.table('Stats_Strength Data")
data
data=read.table('Stats_Strength Data")
data
data=read.table("Stats_Strength Data.txt",header=T)
data
lm(Dynamic_Lift~Arm_Strength)
lm(Dynamic_Lift~Arm_Strength,data=data)
??plot
?plot
plot(data$Arm_Strength,data$Dynamic_Lift)
a=lm(Dynamic_Lift~Arm_Strength,data=data)
summary(a)
?lm
res=a$residuals
res
fit=a$fitted.values
fit
plot(fit,res)
qqplot(res)
qqnorm(res)
?qqnorm
qqline(res)
plot(res)
library (datasets)
?datasets
library(help='datasets')
data(women)
women
mydata=women
mydata
b=lm(weight~height,data=mydata)
summary(b)
res=b$residuals
fit=b$fitted.values
plot(fit,res)
qqnorm(res)
qqline(res)
plot(res)
plot(mydata$weight,mydata$height)
save.image("C:\\Users\\Neeraja\\Documents\\R\\ClassDec2.RData")
q()
#Assignment 3
#Question No. 2(b)
pf(4.89,11,7,lower.tail=F);
#Question No. 3(a)
station1=c(5030, 13700, 10730, 11400, 860, 2200, 4250, 15040, 4980, 11910, 8130, 26850,
17660, 22800, 1130, 1690);
station2=c(2800, 4670, 6890, 7720, 7030, 7330, 2810, 1330, 3320, 1230, 2130, 2190);
boxplot(data, data2, range=1.5, names=c(\male",\female"), main=\box plots of
two data sets", col=c(\red",\blue"))
boxplot(station1,station2,range=2,names=c("Station 1","Station 2"),main="Box plot of two data sets",col=c("red","blue");
boxplot(station1,station2,range=2,names=c("Station 1","Station 2"),main="Box plot of two data sets",col=c("red","blue")
boxplot(station1,station2,range=2,names=c("Station 1","Station 2"),main="Box plot of two data sets",col=c("red","blue")
boxplot(station1,station2,range=1.5,names=c("Station 1","Station 2"),main="Box Plot of two data sets",col=c("red","blue"))
boxplot(station1,station2,range=1,names=c("Station 1","Station 2"),main="Box plot of two data sets",col=c("red","blue"))
boxplot(station1,station2,range=0.5,names=c("Station 1","Station 2"),main="Box plot of two data sets",col=c("red","blue"))
boxplot(station1,station2,range=0.5,names=c("Station 1","Station 2"),main="Box plot of two data sets",col=c("red","blue"))
boxplot(station1,station2,range=0.25,names=c("Station 1","Station 2"),main="Box plot of two data sets",col=c("red","blue"))
#Question 3(b)
#Testing for equality of two variances
var.test(x=station1,y=station2,alternative="two.sided",conf.level=0.95,ration=1)
#Since p<alpha, null hypothesis is rejected and the variances are not equal
#Testing for equality of means
t.test=(x=station1,y=station2,alternative="two.sided",var.equal=F,mu=0)
t.test=(x=station1,y=station2,alternative="two.sided",var.equal=F,mu=0,conf.level=0.95)
t.test=(x=station1,y=station2,alternative="two.sided",var.equal=F,mu=0,conf.level=0.95)
t.test(x=station1,y=station2,alternative="two.sided",var.equal=F,mu=0,conf.level=0.95)
#Question 4(a)
data=c(3.4, 2.5, 4.8, 2.9, 3.6, 2.8, 3.3, 5.6, 3.7, 2.8, 4.4, 4.0, 5.2, 3.0, 4.8);
qqnorm(data)
qline(data)
?qline
??qline
qqline(data)
#Question 4(b)
t.test(data,alternative="two.sided",conf.level=0.9,mu=3.5)
t.test(data,alternative="two.sided",conf.level=0.9,mu=3.5)
#Question 5
qf(0.025,11,11,lower.tail=F)
qf(0.97,11,11,lower.tail=F)
pt(0.025,22)
qt(0.025,22)
#Question 6(b)
prop.test(x=c(80,40),n=c(250,175),conf.level=0.95,alternative="two.sided",correct=FALSE)
#Question 7
before=c(90.4,95.5,98.7,115.9,104.0,85.6);
after=c(91.7,93.9,97.4,112.8,101.3,84.0);
t.test(before,after,alternative="two.sided",conf.level=0.95)
?lm
q()
time
lifetime=data$t
summary(lifetime)
setwd("C:/Users/Neeraja/Documents/R")
#MATH 5302 STATISTICAL METHODS
#FINAL PROJECT
#NEERAJA GOPAL
#1001119411
#QUESTION 1
data=read.table("Cutaneous Melanoma Data Set.txt",header=T)#reading data
#Part a
lifetime=data$t #extracting the information about time from data
f=fivenum(lifetime) #five number summary that fives the minimum,Q1,Q2,Q3 and maximum
summary(f)
q=quantile(lifetime,type=6)
q
#Part b
boxplot(lifetime,range=1.5,col="red",main="Boxplot of Lifetime in years",xlab="Lifetime in years",horizontal=T)
#mtext("Maximum",side=1,line=7)
#Part c
qqnorm(lifetime,ylab="Lifetime in years",main="Q-Q Plot of Lifetime")
qqline(lifetime)
#Part d
data1=data[data$x==1,] #extracting the lifetime values for respective nodule values
data1
l1=length(data1$t) #calculating the number of p'atients in nodule 1
l1
#Part e
data2=data[data$x==2,]
data2
l2=length(data2$t)
l2
data3=data[data$x==3,]
data3
l3=length(data3$t)
l3
data4=data[data$x==4,]
data4
l4=length(data4$t)
l4
#Part f
#Testing for equivalence of the variances first between data set 1 and data set 2
var.test(x=data1$t,y=data4$t,alternative="two.sided",conf.level=0.95,ratio=1)
#From the above test we see that the variances are not equal, hence testing for two means
t.test(x=data1$t,y=data4$t,alternative="greater",mu=0,var.equal=FALSE,conf.level=0.95)
#Part g
#Testing for equivalence of the variances between data set 1(nodule 1) and data set 2 (nodule 2)
var.test(x=data1$t,y=data2$t,alternative="two.sided",conf.level=0.95,ratio=1)
#From the above test we see that the variances could be equal, hence testing for equivalence of the means with equal variances
t.test(x=data1$t,y=data2$t,alternative="greater",mu=0,var.equal=TRUE,conf.level=0.95)
#Testing for equivalence of the variances between data set 2(nodule 2) and data set 3(nodule 3)
var.test(x=data2$t,y=data3$t,alternative="two.sided",conf.level=0.95,ratio=1)
#From the above test the variances were found to be equal, hence testing for equivalence of the two means with equal variances
t.test(x=data2$t,y=data3$t,alternative="greater",mu=0,var.equal=TRUE,conf.level=0.95)
#Testing for equivalence of variances for data set 1(nodule 1) and data set 3(nodule 3)
var.test(x=data1$t,y=data3$t,alternative="two.sided",conf.level=0.95,ratio=1)
#From the above test the variances were found to be equal, hence testing for equivalence of the two means with equal variances
t.test(x=data1$t,y=data3$t,alternative="greater",mu=0,var.equal=TRUE,conf.level=0.95)
#Testing for equivalence of variances for data set 2(nodule 2) and data set 4(nodule 4)
var.test(x=data2$t,y=data4$t,alternative="two.sided",conf.level=0.95,ratio=1)
#From the above test the variances were found to be equal, hence testing for equivalence of the two means with equal variances
t.test(x=data2$t,y=data4$t,alternative="greater",mu=0,var.equal=TRUE,conf.level=0.95)
#Testing for equivalence of variances for data set 3(nodule 3) and data set 4(nodule 4)
var.test(x=data3$t,y=data4$t,alternative="two.sided",conf.level=0.95,ratio=1)
#From the above test the variances were found to be equal, hence testing for equivalence of the two means with equal variances
t.test(x=data3$t,y=data4$t,alternative="greater",mu=0,var.equal=TRUE,conf.level=0.95)
q()
